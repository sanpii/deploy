#!/bin/sh

set -e

source "$(dirname $(realpath $BASH_SOURCE))/config/backup.sh"

readonly LOCK="/var/lock/backup"
readonly MOUNT_POINT=$(dirname $REPOSITORY)

function postgresql_get_databases()
{
    psql -P tuples_only -c 'SELECT datname FROM pg_database WHERE datistemplate = false;'
}

function postgresql_test()
{
    readonly CLUSTER_DIR="/var/lib/postgresql/$PGSQL_VERSION/backup/"

    sudo -u postgres pg_createcluster $PGSQL_VERSION backup --start -d "$CLUSTER_DIR"
    sudo -u postgres psql --port 5433 --quiet --command '\i /media/data/pgsql.dump'


    sudo -u postgres pg_dropcluster --stop "$PGSQL_VERSION" backup
}

function main()
{
    mount | grep -q $MOUNT_POINT || mount $MOUNT_POINT

    mysqldump -u $MYSQL_USER --password="$MYSQL_PASSWORD" --all-databases > /media/data/mysql.dump
    sudo -u $PGSQL_USER pg_dumpall -f /media/data/pgsql.dump

    borg create -C zlib,6 "$REPOSITORY::cuddles-$(date +%Y-%m-%d_%H:%M:%S)" $BACKUP_FILES

    borg prune --verbose --stats --list \
        --keep-daily=7 --keep-weekly=4 --keep-monthly=-1 \
        "$REPOSITORY"

    if [[ $(date +%H) -eq 3 ]]
    then
        rsync --recursive --delete --compress $REPOSITORY kimsufi:~ &
        readonly RSYNC_PID=$!
    fi

    postgresql_test

    wait $RSYNC_PID

    umount $MOUNT_POINT
}

if [[ ! -f "$LOCK" ]]
then
    touch "$LOCK"
    trap 'rm -f "$LOCK"' EXIT
    main
fi
