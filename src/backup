#!/bin/sh

set -e

source "$(dirname $(realpath $BASH_SOURCE))/config/backup.sh"

readonly LOCK="/var/lock/backup"
readonly MOUNT_POINT=$(dirname $REPOSITORY)

function postgresql_get_databases()
{
    sudo -u postgres psql --pset tuples_only --command 'SELECT datname FROM pg_database WHERE datistemplate = false;'
}

function postgresql_test()
{
    readonly CLUSTER_DIR="/var/lib/postgresql/$PGSQL_VERSION/backup"
    readonly TEST_DIR="$CLUSTER_DIR/tests"

    sudo -su postgres

    sudo -u postgres pg_createcluster "$PGSQL_VERSION" backup -d "$CLUSTER_DIR"
    sudo -u postgres pg_conftool "$PGSQL_VERSION" backup set shared_preload_libraries 'pg_stat_statements,powa,pg_stat_kcache,pg_qualstats'
    sudo -u postgres pg_ctlcluster "$PGSQL_VERSION" backup start
    sudo -u postgres psql --port 5433 --output /dev/null --quiet --command '\i /media/data/pgsql.dump'

    for database in $(postgresql_get_databases)
    do
        sudo -u postgres mkdir --parent "$TEST_DIR/$database"
        sudo -u postgres pg_tapgen --dbname "$database" --directory "$TEST_DIR/$database"
        sudo -u postgres pg_prove --dbname "$database" --port 5433 $TEST_DIR/$database/*.sql
    done

    sudo -u postgres pg_dropcluster --stop "$PGSQL_VERSION" backup

    exit
}

function main()
{
    mount | grep -q $MOUNT_POINT || mount $MOUNT_POINT

    mysqldump -u $MYSQL_USER --password="$MYSQL_PASSWORD" --all-databases > /media/data/mysql.dump
    sudo -u $PGSQL_USER pg_dumpall -f /media/data/pgsql.dump

    borg create --compression zlib,6 --exclude-from "$(dirname $(realpath $BASH_SOURCE))/config/exclude.txt" "$REPOSITORY::cuddles-$(date +%Y-%m-%d_%H:%M:%S)" $BACKUP_FILES

    borg prune --verbose --stats --list \
        --keep-daily=7 --keep-weekly=4 --keep-monthly=-1 \
        "$REPOSITORY"

    if [[ $(date +%H) -eq 3 ]]
    then
        rsync --recursive --delete --compress $REPOSITORY kimsufi:~ &
        readonly RSYNC_PID=$!
    fi

    postgresql_test

    wait $RSYNC_PID

    umount $MOUNT_POINT
}

if [[ ! -f "$LOCK" ]]
then
    touch "$LOCK"
    trap 'rm -f "$LOCK"' EXIT
    main
fi
